
version: 2.1

# Specify working directories for each of the PHP versions we're testing with
# since CircleCI can't expand environment variables in the value for working_dir
workdir-56: &workdir-56
  working-directory: ~/results/5.6

workdir-73: &workdir-73
  working-directory: ~/results/7.3

workdir-80: &workdir-80
  working-directory: ~/results/8.0

shared-build: &shared-build
  working_directory: ~/repo
  machine:
    image: circleci/ubuntu-2004:202010-01
  steps:
    - checkout
#    - setup_remote_docker
    - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "composer.json" }}-$PHP_VERSION
    - run:
        name: Update composer
        command: composer self-update
    - run:
        name: Install dependencies
        command: |
          composer install -o --prefer-dist --no-interaction
    - save_cache:
        paths:
          - ./inc
        key: v1-dependencies-{{ checksum "composer.json" }}-$PHP_VERSION
    - run:
        name: Prepare log directories
        command: |
          mkdir -p build/logs/coverage
          mkdir -p build/logs/unittests
          mkdir -p build/logs/phpmetrics
    - persist_to_workspace:
        root: ~/repo
        paths:
          - "*"

shared-linting: &shared-linting
  docker:
    - image: cimg/php:$PHP_VERSION-browsers
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Check for PHP parse errors
        command: |
          find ./ -type -f -name '*.php' -print0 | xargs -0 -n1 -P4 php -l -n | (! grep -v "No syntax errors found" )


github-release: &github-release
  docker:
    - image: cibuilds/github
  steps:
    - attach_workspace:
        at: ~/repo

    - run:
        name: Display GIT tag file
        command: |
          VERSION=$(cat ./TAG)
          echo "${VERSION}"

    - run:
        name: Create the GitHub release
        command: build_env/create_release.sh

jobs:
  build:
    << : *shared-build
    steps:
      - attach_workspace:
          at: ~/repo
      - checkout
      - run:
          name: Install docker-compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
#      - setup_remote_docker
      - restore_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
      - run:
          name: Install all required development/test composer dependencies
          command: composer --dev install
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            - inc/
      - run:
          name: Execute plugin tests with coverage
          command: make tests
