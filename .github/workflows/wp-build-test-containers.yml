name: Build WP plugin unit-test container

on:
  push:
    tags:
      - test_workflow*

jobs:
  # To push the release (sources) to the WordPress.org SVN instance for this plugin
  build-containers:
    name: Build the plugin unit-test container for ${{ github.repository }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.4']
    steps:
      # All steps after this one will have env variable `E20R_PLUGIN_NAME` passed to them.
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
#          repository: eighty20results/${{ env.E20R_PLUGIN_NAME }}
#          ssh_key: ${{ env.E20R_SSH_KEY }}
#          ref: test_workflow_updates
#          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set the plugin name (from the repository name)
        run: echo E20R_PLUGIN_NAME=$(echo ${{ github.repository }} | awk -F / '{print $2}') >> $GITHUB_ENV

      - name: Install the bc utility - needed in order to install/configure php
        run: sudo apt-get update -y && sudo apt-get install -y bc

      - name: Install required PHP versions & tools
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring
          tools: composer:v2, phpunit, pecl, php-cs-fixer, phpcs, phplint, phpmd, phpstan
          coverage: pcov

      - name: Install docker-compose tool
        run: make CONTAINER_ACCESS_TOKEN=${{ secrets.CONTAINER_ACCESS_TOKEN }} DOCKER_USER=${{ secrets.DOCKER_USER }} docker-compose
        shell: bash
        env:
          E20R_PLUGIN_NAME: ${{ env.E20R_PLUGIN_NAME }}
#          DOCKER_USER: ${{ secrets.DOCKER_USER }}
#          CONTAINER_ACCESS_TOKEN: ${{ secrets.CONTAINER_ACCESS_TOKEN }}

      - name: Login to Docker Hub for ${{ secrets.DOCKER_USER }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.CONTAINER_ACCESS_TOKEN }}

      - name: Pull the container from the Docker HUB
        run: make CONTAINER_ACCESS_TOKEN=${{ secrets.CONTAINER_ACCESS_TOKEN }} DOCKER_USER=${{ secrets.DOCKER_USER }} image-pull
        shell: bash
        env:
          E20R_PLUGIN_NAME: ${{ env.E20R_PLUGIN_NAME }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          CONTAINER_ACCESS_TOKEN: ${{ secrets.CONTAINER_ACCESS_TOKEN }}

      - name: Update the container (build if necessary)
        run: make CONTAINER_ACCESS_TOKEN=${{ secrets.CONTAINER_ACCESS_TOKEN }} DOCKER_USER=${{ secrets.DOCKER_USER }} image-build
        shell: bash
        env:
          E20R_PLUGIN_NAME: ${{ env.E20R_PLUGIN_NAME }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          CONTAINER_ACCESS_TOKEN: ${{ secrets.CONTAINER_ACCESS_TOKEN }}
